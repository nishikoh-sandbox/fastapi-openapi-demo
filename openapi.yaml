openapi: 3.0.2
info:
  title: FastAPI
  version: 0.1.0
servers:
  - url: 'http://127.0.0.1:8000'
    description: Local environment
  - url: 'https://stag.example.com'
    description: Staging environment
  - url: 'https://prod.example.com'
    description: Production environment
paths:
  '/{model_id}:predict':
    post:
      tags:
        - xyz
      summary: Create an item
      description: |-
        Create an item with all the information:

        - **name**: each item must have a name
        - **description**: a long description
        - **price**: required
        - **tax**: if the item doesn't have tax, you can omit this
        - **tags**: a set of unique tag strings for this item
      operationId: index__model_id__predict_post
      parameters:
        - required: true
          schema:
            title: ModelId
            enum:
              - alexnet
              - resnet
              - lenet
            type: string
            description: An enumeration.
          name: model_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Foo
              required:
                - test_1
              type: object
              properties:
                test_1:
                  title: Test 1
                  type: string
                  description: |-


                    - aaa
                    - bbb
                        
            examples:
              normal:
                summary: A normal example
                description: A **normal** item works correctly.
                value:
                  name: Fooo
                  description: A very nice Item
                  price: 35.4
                  tax: 3.2
              converted:
                summary: An example with converted data
                description: FastAPI can convert price `strings` to actual `numbers` automatically
                value:
                  name: Barr
                  price: '35.4'
              invalid:
                summary: Invalid data is rejected with an error
                value:
                  name: Baz
                  price: thirty five point four
        required: true
      responses:
        '200':
          description: The created item
          content:
            application/json:
              schema:
                title: Bar
                required:
                  - array_1
                type: object
                properties:
                  array_1:
                    title: Array 1
                    type: array
                    items:
                      type: integer
                    description: |-

                      - ccc
                      - ccc
                          
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                title: HTTPValidationError
                type: object
                properties:
                  detail:
                    title: Detail
                    type: array
                    items:
                      title: ValidationError
                      required:
                        - loc
                        - msg
                        - type
                      type: object
                      properties:
                        loc:
                          title: Location
                          type: array
                          items:
                            anyOf:
                              - type: string
                              - type: integer
                        msg:
                          title: Message
                          type: string
                        type:
                          title: Error Type
                          type: string
      security:
        - HTTPBearer: []
components:
  schemas:
    Bar:
      title: Bar
      required:
        - array_1
      type: object
      properties:
        array_1:
          title: Array 1
          type: array
          items:
            type: integer
          description: |-

            - ccc
            - ccc
                
    Foo:
      title: Foo
      required:
        - test_1
      type: object
      properties:
        test_1:
          title: Test 1
          type: string
          description: |-


            - aaa
            - bbb
                
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            title: ValidationError
            required:
              - loc
              - msg
              - type
            type: object
            properties:
              loc:
                title: Location
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: integer
              msg:
                title: Message
                type: string
              type:
                title: Error Type
                type: string
    ModelId:
      title: ModelId
      enum:
        - alexnet
        - resnet
        - lenet
      type: string
      description: An enumeration.
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
tags:
  - name: xyz
    description: Operations with users. The **login** logic is also here.
  - name: items
    description: Manage items. So _fancy_ they have their own docs.
    externalDocs:
      description: Items external docs
      url: 'https://fastapi.tiangolo.com/'
